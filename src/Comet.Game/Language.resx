<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="StrAnotherLoginOtherIp" xml:space="preserve">
    <value>Atention! Your account may have been hacked! Someone outside of your network is trying to login.</value>
  </data>
  <data name="StrAnotherLoginSameIp" xml:space="preserve">
    <value>Atention! Your account is trying to login from inside of your network!</value>
  </data>
  <data name="StrCannotPickupOtherItems" xml:space="preserve">
    <value>Cannot pick up others items.</value>
  </data>
  <data name="StrDead" xml:space="preserve">
    <value>You are already dead.</value>
  </data>
  <data name="StrDragonBallDropped" xml:space="preserve">
    <value>{0} has dropped a Dragon Ball in {1}.</value>
  </data>
  <data name="StrGuardYouPay" xml:space="preserve">
    <value>You`ll pay for what you`ve done!</value>
  </data>
  <data name="StrInvalidCoordinate" xml:space="preserve">
    <value>Invalid coordinate.</value>
  </data>
  <data name="StrInvalidMsg" xml:space="preserve">
    <value>Invalid message.</value>
  </data>
  <data name="StrItemCannotDiscard" xml:space="preserve">
    <value>{0} cannot be discarded.</value>
  </data>
  <data name="StrKickout" xml:space="preserve">
    <value>You have been kicked from the game. Reason: {0}.</value>
  </data>
  <data name="StrKillingExperience" xml:space="preserve">
    <value>{0} extra experience points awarded by killing monsters.</value>
  </data>
  <data name="StrNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="StrNotEnoughEmoney" xml:space="preserve">
    <value>You don't have enough Conquer Points.</value>
  </data>
  <data name="StrNotEnoughMoney" xml:space="preserve">
    <value>You don't have enough Silvers.</value>
  </data>
  <data name="StrPeeragePromptBaron" xml:space="preserve">
    <value>{0} has become a Baron.</value>
  </data>
  <data name="StrPeeragePromptBaroness" xml:space="preserve">
    <value>{0} has become a Baroness.</value>
  </data>
  <data name="StrPeeragePromptCountess" xml:space="preserve">
    <value>{0} has become a Countess.</value>
  </data>
  <data name="StrPeeragePromptDuchess" xml:space="preserve">
    <value>Congratulations! {0} new Duchess of {1}!</value>
  </data>
  <data name="StrPeeragePromptDuke" xml:space="preserve">
    <value>Congratulations! {0} new Duke of {1}!</value>
  </data>
  <data name="StrPeeragePromptEarl" xml:space="preserve">
    <value>{0} has become an Earl.</value>
  </data>
  <data name="StrPeeragePromptKing" xml:space="preserve">
    <value>Hear ye, hear ye! All hails to our majesty {0}, new King of {1}!</value>
  </data>
  <data name="StrPeeragePromptKnight" xml:space="preserve">
    <value>{0} has become a Knight.</value>
  </data>
  <data name="StrPeeragePromptLady" xml:space="preserve">
    <value>{0} has become a Lady.</value>
  </data>
  <data name="StrPeeragePromptPrince" xml:space="preserve">
    <value>Congratulations! All hails to our highness {0}, Prince of {1}!</value>
  </data>
  <data name="StrPeeragePromptPrincess" xml:space="preserve">
    <value>Congratulations! All hails to our highness {0}, Princess of {1}!</value>
  </data>
  <data name="StrPeeragePromptQueen" xml:space="preserve">
    <value>Hear ye, hear ye! All hails to our majesty {0}, new Queen of {1}!</value>
  </data>
  <data name="StrPickupItem" xml:space="preserve">
    <value>You picked up {0}.</value>
  </data>
  <data name="StrPickupSilvers" xml:space="preserve">
    <value>You picked up {0:D0} silvers.</value>
  </data>
  <data name="StrTargetNotInRange" xml:space="preserve">
    <value>The target is not in range.</value>
  </data>
  <data name="StrTargetNotOnline" xml:space="preserve">
    <value>The target is not online.</value>
  </data>
  <data name="StrUnableToUseItem" xml:space="preserve">
    <value>Unable to use item.</value>
  </data>
  <data name="StrWeaponSkillUp" xml:space="preserve">
    <value>Your weapon proeficiency level has been improved.</value>
  </data>
  <data name="StrYourBagIsFull" xml:space="preserve">
    <value>Your bag is full.</value>
  </data>
</root>